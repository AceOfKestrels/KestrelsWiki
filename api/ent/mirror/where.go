// Code generated by ent, DO NOT EDIT.

package mirror

import (
	"api/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Mirror {
	return predicate.Mirror(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Mirror {
	return predicate.Mirror(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Mirror {
	return predicate.Mirror(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Mirror {
	return predicate.Mirror(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Mirror {
	return predicate.Mirror(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Mirror {
	return predicate.Mirror(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Mirror {
	return predicate.Mirror(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Mirror {
	return predicate.Mirror(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Mirror {
	return predicate.Mirror(sql.FieldLTE(FieldID, id))
}

// OriginPath applies equality check predicate on the "originPath" field. It's identical to OriginPathEQ.
func OriginPath(v string) predicate.Mirror {
	return predicate.Mirror(sql.FieldEQ(FieldOriginPath, v))
}

// TargetPath applies equality check predicate on the "targetPath" field. It's identical to TargetPathEQ.
func TargetPath(v string) predicate.Mirror {
	return predicate.Mirror(sql.FieldEQ(FieldTargetPath, v))
}

// OriginPathEQ applies the EQ predicate on the "originPath" field.
func OriginPathEQ(v string) predicate.Mirror {
	return predicate.Mirror(sql.FieldEQ(FieldOriginPath, v))
}

// OriginPathNEQ applies the NEQ predicate on the "originPath" field.
func OriginPathNEQ(v string) predicate.Mirror {
	return predicate.Mirror(sql.FieldNEQ(FieldOriginPath, v))
}

// OriginPathIn applies the In predicate on the "originPath" field.
func OriginPathIn(vs ...string) predicate.Mirror {
	return predicate.Mirror(sql.FieldIn(FieldOriginPath, vs...))
}

// OriginPathNotIn applies the NotIn predicate on the "originPath" field.
func OriginPathNotIn(vs ...string) predicate.Mirror {
	return predicate.Mirror(sql.FieldNotIn(FieldOriginPath, vs...))
}

// OriginPathGT applies the GT predicate on the "originPath" field.
func OriginPathGT(v string) predicate.Mirror {
	return predicate.Mirror(sql.FieldGT(FieldOriginPath, v))
}

// OriginPathGTE applies the GTE predicate on the "originPath" field.
func OriginPathGTE(v string) predicate.Mirror {
	return predicate.Mirror(sql.FieldGTE(FieldOriginPath, v))
}

// OriginPathLT applies the LT predicate on the "originPath" field.
func OriginPathLT(v string) predicate.Mirror {
	return predicate.Mirror(sql.FieldLT(FieldOriginPath, v))
}

// OriginPathLTE applies the LTE predicate on the "originPath" field.
func OriginPathLTE(v string) predicate.Mirror {
	return predicate.Mirror(sql.FieldLTE(FieldOriginPath, v))
}

// OriginPathContains applies the Contains predicate on the "originPath" field.
func OriginPathContains(v string) predicate.Mirror {
	return predicate.Mirror(sql.FieldContains(FieldOriginPath, v))
}

// OriginPathHasPrefix applies the HasPrefix predicate on the "originPath" field.
func OriginPathHasPrefix(v string) predicate.Mirror {
	return predicate.Mirror(sql.FieldHasPrefix(FieldOriginPath, v))
}

// OriginPathHasSuffix applies the HasSuffix predicate on the "originPath" field.
func OriginPathHasSuffix(v string) predicate.Mirror {
	return predicate.Mirror(sql.FieldHasSuffix(FieldOriginPath, v))
}

// OriginPathEqualFold applies the EqualFold predicate on the "originPath" field.
func OriginPathEqualFold(v string) predicate.Mirror {
	return predicate.Mirror(sql.FieldEqualFold(FieldOriginPath, v))
}

// OriginPathContainsFold applies the ContainsFold predicate on the "originPath" field.
func OriginPathContainsFold(v string) predicate.Mirror {
	return predicate.Mirror(sql.FieldContainsFold(FieldOriginPath, v))
}

// TargetPathEQ applies the EQ predicate on the "targetPath" field.
func TargetPathEQ(v string) predicate.Mirror {
	return predicate.Mirror(sql.FieldEQ(FieldTargetPath, v))
}

// TargetPathNEQ applies the NEQ predicate on the "targetPath" field.
func TargetPathNEQ(v string) predicate.Mirror {
	return predicate.Mirror(sql.FieldNEQ(FieldTargetPath, v))
}

// TargetPathIn applies the In predicate on the "targetPath" field.
func TargetPathIn(vs ...string) predicate.Mirror {
	return predicate.Mirror(sql.FieldIn(FieldTargetPath, vs...))
}

// TargetPathNotIn applies the NotIn predicate on the "targetPath" field.
func TargetPathNotIn(vs ...string) predicate.Mirror {
	return predicate.Mirror(sql.FieldNotIn(FieldTargetPath, vs...))
}

// TargetPathGT applies the GT predicate on the "targetPath" field.
func TargetPathGT(v string) predicate.Mirror {
	return predicate.Mirror(sql.FieldGT(FieldTargetPath, v))
}

// TargetPathGTE applies the GTE predicate on the "targetPath" field.
func TargetPathGTE(v string) predicate.Mirror {
	return predicate.Mirror(sql.FieldGTE(FieldTargetPath, v))
}

// TargetPathLT applies the LT predicate on the "targetPath" field.
func TargetPathLT(v string) predicate.Mirror {
	return predicate.Mirror(sql.FieldLT(FieldTargetPath, v))
}

// TargetPathLTE applies the LTE predicate on the "targetPath" field.
func TargetPathLTE(v string) predicate.Mirror {
	return predicate.Mirror(sql.FieldLTE(FieldTargetPath, v))
}

// TargetPathContains applies the Contains predicate on the "targetPath" field.
func TargetPathContains(v string) predicate.Mirror {
	return predicate.Mirror(sql.FieldContains(FieldTargetPath, v))
}

// TargetPathHasPrefix applies the HasPrefix predicate on the "targetPath" field.
func TargetPathHasPrefix(v string) predicate.Mirror {
	return predicate.Mirror(sql.FieldHasPrefix(FieldTargetPath, v))
}

// TargetPathHasSuffix applies the HasSuffix predicate on the "targetPath" field.
func TargetPathHasSuffix(v string) predicate.Mirror {
	return predicate.Mirror(sql.FieldHasSuffix(FieldTargetPath, v))
}

// TargetPathEqualFold applies the EqualFold predicate on the "targetPath" field.
func TargetPathEqualFold(v string) predicate.Mirror {
	return predicate.Mirror(sql.FieldEqualFold(FieldTargetPath, v))
}

// TargetPathContainsFold applies the ContainsFold predicate on the "targetPath" field.
func TargetPathContainsFold(v string) predicate.Mirror {
	return predicate.Mirror(sql.FieldContainsFold(FieldTargetPath, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Mirror) predicate.Mirror {
	return predicate.Mirror(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Mirror) predicate.Mirror {
	return predicate.Mirror(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Mirror) predicate.Mirror {
	return predicate.Mirror(sql.NotPredicates(p))
}
